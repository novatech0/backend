name: Continuous Delivery & Deployment (CD)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: cd

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 12345678
          MYSQL_DATABASE: agrotech_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DOCKER_IMAGE: pierod04/agrotech-backend
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Cache de dependencias Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Descargar dependencias
        run: mvn dependency:go-offline

      - name: Esperar a que MySQL esté listo
        run: |
          while ! mysqladmin ping -h"mysql" -P"3306" -uroot -p"12345678" --silent; do
            sleep 1
          done

      - name: Compilar proyecto con tests
        run: mvn -B clean package -DskipTests=false

      - name: Construir imagen Docker
        run: docker build -t $DOCKER_IMAGE .

      - name: Login y push a Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
          docker push $DOCKER_IMAGE

      - name: Realizar despliegue en Render
        env:
          DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          curl -X POST $DEPLOY_HOOK_URL